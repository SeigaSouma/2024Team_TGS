//=============================================================================
//
// コマンドグループ処理 [command_group.cpp]
// Author : Ibuki Okusada
//
//=============================================================================
#include "command_group.h"

//==========================================================================
// 定数定義
//==========================================================================
namespace
{
	
}

//==========================================================================
// コンストラクタ
//==========================================================================
CCommandGroup::CCommandGroup()
{
	m_CommandList.clear();
}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CCommandGroup::Init()
{
	m_CommandList.clear();

	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CCommandGroup::Uninit()
{
	for (auto it = m_CommandList.begin(); it != m_CommandList.end(); it++) {
		if ((*it) == nullptr) continue;
		(*it)->Uninit();
		delete (*it);
		(*it) = nullptr;
	}

	m_CommandList.clear();
}

//==========================================================================
// 内部に登録
//==========================================================================
void CCommandGroup::ListIn(CCommand* command)
{
	m_CommandList.push_back(command);
}

//==========================================================================
// コンフィグ生成
//==========================================================================
CCommandGroup* CCommandGroup::Create(std::string& string)
{
	CCommandGroup* pGroup = DEBUG_NEW CCommandGroup;

	if (pGroup != nullptr) {

	}

	return pGroup;
}
