//=============================================================================
// 
//  リザルトマネージャ処理 [resultmanager.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "debugproc.h"
#include "resultmanager.h"
#include "calculation.h"

//==========================================================================
// マクロ定義
//==========================================================================

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================
CResultManager* CResultManager::m_pThisPtr = nullptr;	// 自身のポインタ

//==========================================================================
// コンストラクタ
//==========================================================================
CResultManager::CResultManager()
{
	// 値のクリア
	m_JudgeRank = CJudge::JUDGE::JUDGE_DDD;	// 最終評価
	m_fClearTime = 0.0f;			// クリア時間
}

//==========================================================================
// デストラクタ
//==========================================================================
CResultManager::~CResultManager()
{

}

//==========================================================================
// 生成処理
//==========================================================================
CResultManager *CResultManager::Create()
{
	if (m_pThisPtr != nullptr)
	{
		return m_pThisPtr;
	}

	// メモリの確保
	m_pThisPtr = DEBUG_NEW CResultManager;
	if (m_pThisPtr == nullptr)
	{
		return nullptr;
	}

	// 初期化処理
	HRESULT hr = m_pThisPtr->Init();
	if (FAILED(hr))
	{// 失敗していたら
		return nullptr;
	}

	return m_pThisPtr;
}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CResultManager::Init()
{
	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CResultManager::Uninit()
{
	delete m_pThisPtr;
	m_pThisPtr = nullptr;
}

//==========================================================================
// リセット
//==========================================================================
void CResultManager::Reset()
{
	// 値のクリア

}

//==========================================================================
// 更新処理
//==========================================================================
void CResultManager::Update()
{
	
}
