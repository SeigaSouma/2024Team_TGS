//=============================================================================
// 
//  タイマー処理 [timer_result.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "timer_result.h"
#include "manager.h"
#include "multinumber.h"
#include "debugproc.h"
#include "calculation.h"
#include "game.h"
#include "gamemanager.h"

//==========================================================================
// 定数定義
//==========================================================================
namespace
{
	const char* TEXTURE = "data\\TEXTURE\\number\\number_oradano.png";	// テクスチャのファイル

	const MyLib::Vector3 DEFAULT_POSITION = MyLib::Vector3(1100.0f, 100.0f, 0.0f);	// 初期位置
	const D3DXVECTOR2 SIZE_NUMBER = D3DXVECTOR2(30.0f, 30.0f);
	const float DSTANCE_TIMER = SIZE_NUMBER.x * 2.25f;
}

//==========================================================================
// コンストラクタ
//==========================================================================
CTimer_Result::CTimer_Result(int nPriority) : CTimer()
{
	// 値のクリア
}

//==========================================================================
// デストラクタ
//==========================================================================
CTimer_Result::~CTimer_Result()
{

}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CTimer_Result::Init()
{
	CTimer::Init();

	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CTimer_Result::Uninit()
{
	CTimer::Uninit();
}

//==========================================================================
// 更新処理
//==========================================================================
void CTimer_Result::Update()
{
	CTimer::Update();
}


//==========================================================================
// 描画処理
//==========================================================================
void CTimer_Result::Draw()
{

}
